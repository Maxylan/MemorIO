#-- @Maxylan (c) 2025, MemorIO
#
# Fallback (:80), HTTP.
#
<VirtualHost *:80>
	StrictHostCheck OFF

	# Access
	UserDir disabled root

	# Disable TRACE Method
    TraceEnable off

	# Disable Directory Listing
	Options -Indexes

	# Limit Request Size
    LimitRequestBody 10485760

	# Restrict this virtualhost to be accessible via my subnet only.
    <Location /> 
        Require ip 192.168.1.0/24
    </Location>

	# Timeout settings
	Timeout 24
	KeepAlive On
	KeepAliveTimeout 4
	MaxKeepAliveRequests 6

	# Request Limits
	<IfModule mod_reqtimeout.c>
		RequestReadTimeout header=20-40,MinRate=500 body=20,MinRate=500
	</IfModule>

	<FilesMatch "^\.">
		# Deny hidden files.
		Require all denied
	</FilesMatch>
	<FilesMatch "^\..*">
		# Deny any and all hidden files, lol.
		Require all denied
	</FilesMatch>
    <FilesMatch "(^#.*#|\.(bak|conf|config|ini|log|old|swp|tmp)|~)$">
    	# Deny access to configuration files
        Require all denied
    </FilesMatch>

	# Host Details
	ServerName memorio.torpssons.se
	ServerAdmin webmaster@torpssons.se
	ServerSignature Off
	ServerTokens Prod

	# Simply so it wouldn't take another default, I think..
	DocumentRoot /var/www/memorio

	<Directory "/">
        Options -Indexes
    	Require all denied
	</Directory>

	# SSL Redirect
    Redirect permanent / https://memorio.torpssons.se/home
</VirtualHost>

#-- @Maxylan (c) 2025, MemorIO
#
# Home (:443), SSL/HTTPS.
#
<VirtualHost *:443>
	StrictHostCheck OFF

	# Logging
	LogLevel trace2
	ErrorLog ${APACHE_LOG_DIR}/memorio/error.log
	CustomLog ${APACHE_LOG_DIR}/memorio/access.log combined

	# Mark requests from the loop-back interface, skip logging.
	SetEnvIf Remote_Addr "127\.0\.0\.1" dontlog

	# Access
	UserDir disabled root

	# Disable TRACE Method
    TraceEnable off

	# Disable Directory Listing
	Options -Indexes

	# Limit Request Size
    LimitRequestBody 10485760

	# Restrict this virtualhost to be accessible via my subnet only.
    <Location /> 
        Require ip 192.168.1.0/24
    </Location>

	# Timeout settings
	Timeout 24
	KeepAlive On
	KeepAliveTimeout 4
	MaxKeepAliveRequests 6

	# Request Limits
	<IfModule mod_reqtimeout.c>
		RequestReadTimeout header=20-40,MinRate=500 body=20,MinRate=500
	</IfModule>

	<FilesMatch "^\.">
		# Deny hidden files.
		Require all denied
	</FilesMatch>
	<FilesMatch "^\..*">
		# Deny any and all hidden files, lol.
		Require all denied
	</FilesMatch>
    <FilesMatch "(^#.*#|\.(bak|conf|config|ini|log|old|swp|tmp)|~)$">
    	# Deny access to configuration files
        Require all denied
    </FilesMatch>

	# Host Details
	ServerName memorio.torpssons.se
	ServerAdmin webmaster@torpssons.se
	ServerSignature Off
	ServerTokens Prod

	DocumentRoot /var/www/memorio

	<Directory "/">
        Options -Indexes
    	Require all denied
	</Directory>
    <Directory /var/www/memorio>
        Options -Indexes +FollowSymLinks
        AllowOverride None
        Require all granted
    </Directory>

	# SSL
	SSLEngine on
	SSLCertificateFile      /etc/ssl/certs/torpssons/torpssons-memorio.pem
	SSLCertificateKeyFile   /etc/ssl/private/torpssons/torpssons-memorio.key.pem
	SSLCertificateChainFile /etc/ssl/certs/torpssons/torpssons-memorio.pem

	SSLOptions +OptRenegotiate

	# Disable weak protocols
	SSLProtocol all -SSLv2 -SSLv3 -TLSv1 -TLSv1.1

	# Use strong ciphers
	SSLCipherSuite HIGH:!aNULL:!MD5:!3DES:!CAMELLIA:!AES128
	SSLHonorCipherOrder on

	# Enable OCSP Stapling
	SSLUseStapling on
	SSLStaplingCache "shmcb:logs/stapling_cache(32768)"

	# Policies

	# HSTS (HTTP Strict Transport Security)
    Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"

	# X-Frame-Options - Prevent Clickjacking
    Header always set X-Frame-Options "SAMEORIGIN"

    # X-Content-Type-Options - Prevent MIME Sniffing
    Header always set X-Content-Type-Options nosniff

    # Content Security Policy
    Header always set Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self'; object-src 'none'"

	# Referrer Policy
    Header always set Referrer-Policy "no-referrer"

	# Feature Policy
	Header always set Permissions-Policy "microphone=(), camera=(), payment=(), geolocation=(self), fullscreen=(self)"

	## Cross-Origin Resource Sharing (CORS)
	# Header always set Access-Control-Allow-Origin "https://torpssons.se"
	# Header always set Access-Control-Allow-Methods "HEAD, GET, POST, PUT, PATCH, DELETE, OPTIONS"
	# Header always set Access-Control-Allow-Headers "Content-Type, Authorization, Permissions-Policy, Referrer-Policy, Strict-Transport-Security, Content-Security-Policy, X-Content-Type-Options, X-Frame-Options, X-Platform"
</VirtualHost>

# Available loglevels: 
# - trace8, ..., trace1, 
# - debug, 
# - info, 
# - notice, 
# - warn,
# - error, 
# - crit, 
# - alert, 
# - emerg.
# It is also possible to configure the loglevel for particular modules.

#   SSL Engine Options:
#   Set various options for the SSL engine.
#   o FakeBasicAuth:
#    Translate the client X.509 into a Basic Authorisation.  This means that
#    the standard Auth/DBMAuth methods can be used for access control.  The
#    user name is the `one line' version of the client's X.509 certificate.
#    Note that no password is obtained from the user. Every entry in the user
#    file needs this password: `xxj31ZMTZzkVA'.
#   o ExportCertData:
#    This exports two additional environment variables: SSL_CLIENT_CERT and
#    SSL_SERVER_CERT. These contain the PEM-encoded certificates of the
#    server (always existing) and the client (only existing when client
#    authentication is used). This can be used to import the certificates
#    into CGI scripts.
#   o StdEnvVars:
#    This exports the standard SSL/TLS related `SSL_*' environment variables.
#    Per default this exportation is switched off for performance reasons,
#    because the extraction step is an expensive operation and is usually
#    useless for serving static content. So one usually enables the
#    exportation for CGI and SSI requests only.
#   o OptRenegotiate:
#    This enables optimized SSL connection renegotiation handling when SSL
#    directives are used in per-directory context.
	
#   SSL Protocol Adjustments:
#   The safe and default but still SSL/TLS standard compliant shutdown
#   approach is that mod_ssl sends the close notify alert but doesn't wait for
#   the close notify alert from client. When you need a different shutdown
#   approach you can use one of the following variables:
#   o ssl-unclean-shutdown:
#    This forces an unclean shutdown when the connection is closed, i.e. no
#    SSL close notify alert is send or allowed to received.  This violates
#    the SSL/TLS standard but is needed for some brain-dead browsers. Use
#    this when you receive I/O errors because of the standard approach where
#    mod_ssl sends the close notify alert.
#   o ssl-accurate-shutdown:
#    This forces an accurate shutdown when the connection is closed, i.e. a
#    SSL close notify alert is send and mod_ssl waits for the close notify
#    alert of the client. This is 100% SSL/TLS standard compliant, but in
#    practice often causes hanging connections with brain-dead browsers. Use
#    this only for browsers where you know that their SSL implementation
#    works correctly.
#   Notice: Most problems of broken clients are also related to the HTTP
#   keep-alive facility, so you usually additionally want to disable
#   keep-alive for those clients, too. Use variable "nokeepalive" for this.
#   Similarly, one has to force some clients to use HTTP/1.0 to workaround
#   their broken HTTP/1.1 implementation. Use variables "downgrade-1.0" and
#   "force-response-1.0" for this.
# BrowserMatch "MSIE [2-6]" \
#	nokeepalive ssl-unclean-shutdown \
#	downgrade-1.0 force-response-1.0
